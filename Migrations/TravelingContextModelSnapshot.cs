// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using travelApp.Models;

#nullable disable

namespace travelApp.Migrations
{
    [DbContext(typeof(TravelingContext))]
    partial class TravelingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("travelApp.Models.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("travelApp.Models.TipoV", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TiposV", (string)null);
                });

            modelBuilder.Entity("travelApp.Models.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Patente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipo");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("travelApp.Models.Viaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("int");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("travelApp.Models.Vehiculo", b =>
                {
                    b.HasOne("travelApp.Models.TipoV", "IdTipoNavigation")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Vehiculos_TiposV");

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("travelApp.Models.Viaje", b =>
                {
                    b.HasOne("travelApp.Models.Ciudad", "IdCiudadNavigation")
                        .WithMany("Viajes")
                        .HasForeignKey("IdCiudad")
                        .IsRequired()
                        .HasConstraintName("FK_Viajes_Ciudades");

                    b.HasOne("travelApp.Models.Vehiculo", "IdVehiculoNavigation")
                        .WithMany("Viajes")
                        .HasForeignKey("IdVehiculo")
                        .IsRequired()
                        .HasConstraintName("FK_Viajes_Vehiculos");

                    b.Navigation("IdCiudadNavigation");

                    b.Navigation("IdVehiculoNavigation");
                });

            modelBuilder.Entity("travelApp.Models.Ciudad", b =>
                {
                    b.Navigation("Viajes");
                });

            modelBuilder.Entity("travelApp.Models.TipoV", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("travelApp.Models.Vehiculo", b =>
                {
                    b.Navigation("Viajes");
                });
#pragma warning restore 612, 618
        }
    }
}
